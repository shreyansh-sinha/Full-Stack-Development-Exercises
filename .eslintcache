[{"/home/shreyansh/my-app/src/index.js":"1","/home/shreyansh/my-app/src/components/App.js":"2","/home/shreyansh/my-app/src/components/Course.js":"3","/home/shreyansh/my-app/src/components/Note.js":"4","/home/shreyansh/my-app/src/components/Name.js":"5","/home/shreyansh/my-app/src/components/Country.js":"6","/home/shreyansh/my-app/src/components/services.js":"7","/home/shreyansh/Downloads/my-app/src/components/App.js":"8","/home/shreyansh/Downloads/my-app/src/components/Name.js":"9","/home/shreyansh/Downloads/my-app/src/index.js":"10","/home/shreyansh/Downloads/my-app/src/components/Note.js":"11"},{"size":14767,"mtime":1615840381775,"results":"12","hashOfConfig":"13"},{"size":33324,"mtime":1616233520719,"results":"14","hashOfConfig":"13"},{"size":1168,"mtime":1614424157812,"results":"15","hashOfConfig":"13"},{"size":249,"mtime":1615837023123,"results":"16","hashOfConfig":"13"},{"size":166,"mtime":1615884983076,"results":"17","hashOfConfig":"13"},{"size":1540,"mtime":1615721786557,"results":"18","hashOfConfig":"13"},{"size":285,"mtime":1615909377090,"results":"19","hashOfConfig":"13"},{"size":44904,"mtime":1617872872573,"results":"20","hashOfConfig":"21"},{"size":211,"mtime":1617871587001,"results":"22","hashOfConfig":"21"},{"size":14729,"mtime":1617704419609,"results":"23","hashOfConfig":"21"},{"size":249,"mtime":1617300589000,"results":"24","hashOfConfig":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"op66qp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"p3nzgx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shreyansh/my-app/src/index.js",["48"],"/home/shreyansh/my-app/src/components/App.js",[],"/home/shreyansh/my-app/src/components/Course.js",[],"/home/shreyansh/my-app/src/components/Note.js",[],"/home/shreyansh/my-app/src/components/Name.js",[],"/home/shreyansh/my-app/src/components/Country.js",["49"],"/home/shreyansh/my-app/src/components/services.js",["50"],"/home/shreyansh/Downloads/my-app/src/components/App.js",["51"],"/home/shreyansh/Downloads/my-app/src/components/Name.js",[],"/home/shreyansh/Downloads/my-app/src/index.js",["52"]," import React, {useState} from 'react'\nimport ReactDom from 'react-dom';\n\n// capital letter react function = react component\n// it will return JSX\n\n// function Greeting() {\n// \treturn <h1>This is Shreyansh and this is my first component </h1>;\n// }\n\n// const firstBook = {\n// \tImage: \"https://images-na.ssl-images-amazon.com/images/I/51cRlGQ4eLL._SY300_.jpg\",\n// \tTitle: \"How the One-Armed Sister Sweeps Her House\",\n// \tAuthor: \"Cherie Jones\",\n// };\n\n\n// function Booklist() {\n// \treturn (\n// \t\t<section>\n// \t\t\t<Book img = {firstBook.Image} Title = {firstBook.Title} Author = {firstBook.Author}>\n// \t\t\t</Book>\t\n// \t\t</section>\n// \t\t);\n// }\n\n// const Book = (props) => {\n// \treturn (\n// \t\t\t<section>\n// \t\t\t\t<img src = {props.img}/>\n// \t\t\t\t<h1> {props.Title} </h1>\n// \t\t\t\t<h4> {props.Author} </h4>\n// \t\t\t</section>\n// \t\t)\n// }\n\n// ReactDom.render(<Booklist/>, document.getElementById('root'));\n\n//   const course = {\n//     name: 'Half Stack application development',\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14\n//       }\n//     ]\n//   }\n\n\n// const Header = (props) => {\n\n// \treturn (\n// \t\t\t<h1> {props.course} </h1>\n// \t\t)\n// }\n\n\n// const Content = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>\n// \t\t\t\t{props.parts[0].name} {props.parts[0].exercises}\n// \t\t\t</p>\n// \t\t\t<p>\n// \t\t\t\t{props.parts[1].name} {props.parts[1].exercises}\n// \t\t\t</p>\n// \t\t\t<p>\n// \t\t\t\t{props.parts[2].name} {props.parts[2].exercises}\n// \t\t\t</p>\n// \t\t</div>\n// \t)\n// }\n\n// const Total = (props) => {\n// \tconsole.log(props);\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>\n// \t\t\t\tExercise {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}\n// \t\t\t</p>\n// \t\t</div>\n// \t)\n// }\n\n// const App = () => {\n//   ///const-definitions\n\n//   return (\n//     <div>\n//       <Header course={course.name} />\n//       <Content parts={course.parts} />\n//       <Total parts={course.parts} />\n//     </div>\n//   )\n// }\n\n\n// ReactDom.render(<App/>, document.getElementById('root'));\n\n// const arto = {\n// \tname : 'shreyansh',\n// \tage: 22,\n// \teducation: 'Btech',\n// \tgreet: function() {\n// \t\tconsole.log('hello, my name is ' + this.name);\n// \t},\n// \tdoaddition: function(a, b) {\n// \t\tconsole.log(a+b);\n// \t}\n// }\n\n// // setTimeout(arto.greet(), 1000);\n\n// arto.groolder = function() {\n// \tthis.age += 1;\n// }\n\n// arto.groolder();\n// console.log(arto.age);\n\n// const refaddition = arto.doaddition; // reference addition\n// refaddition(10, 25);\n\n/*\nWhen calling the method through a reference, \nthe method loses knowledge of what was the original this. \nContrary to other languages, in JavaScript the value\nof this is defined based on how the method is called. \nWhen calling the method through a reference the value \nof this becomes the so-called global object and the end\nresult is often not what the software developer had originally intended\n*/\n\n// class Person {\n// \tconstructor(name, age) {\n// \t\tthis.name = name;\n// \t\tthis.age = age;\n// \t}\n// \tgreet() {\n// \t\tconsole.log('hello, my name is ' + this.name);\n// \t}\n// }\n\n// const adam = new Person('Adam bohra', 23);\n// adam.greet();\n\n// console.log('10' + 20);\n\n// function makeAdder(a) {\n\n//   return function(b) {\n//      console.log(a + b);\n//   };\n// }\n\n// var add5 = makeAdder(5);\n// var add20 = makeAdder(20);\n// add5(6); // ?\n// add20(7); // ?\n\n// const Hello = (props) => {\n// \tconst bornYear = () => {\n// \t\tconst yearNow = new Date().getFullYear()\n// \t\treturn yearNow - props.age\n// \t\t}\n\n//   \treturn (\n//     \t<div>\n      \t\n//       \t\t<p>\n//         \t\tHello {props.name}, you are {props.age} years old\n//       \t\t</p>\n      \t\t\n//       \t\t<p>\n//       \t\t \tSo you were probably born in {bornYear()} \n//       \t\t</p>\n    \t\n//     \t</div>\n//   \t)\n//}\n\n\n// const App = (props) => {\n// \tconst counter = props.counter;\n// \treturn (\n// \t\t\t<div> {counter} </div>\n// \t\t)\n// }\n\n\n// let counter = 1;\n\n// const refresh = () => {\n// \tReactDom.render(<App counter = {counter}/>, document.getElementById('root'));\n// }\n\n/// setInterval(() => {\n//   refresh()\n//   counter += 1\n// }, 1000)\n\n// const App = () => {\n// \tconst [ counter, setCounter ] = useState(0)\n\n// \tconsole.log(counter);\n// \tsetTimeout(\n// \t  () => setCounter(counter + 1),\n// \t  1000\n// \t)\n\n// \treturn (\n// \t\t\t<div> {counter} </div>\n// \t\t)\n// }\n\n// const App = () => {\n// \tconst [counter, setCounter] = useState(0)\n\n// \tconst increase = () => {\n// \t\treturn setCounter(counter+1)\n// \t}\n\n// \tconst reset = () => {\n// \t\treturn setCounter(0);\n// \t}\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<div> {counter} </div>\n// \t\t\t\t<button onClick = {increase}> \n// \t\t\t\t\tIncrement\n// \t\t\t\t</button>\n\n// \t\t\t\t<button onClick = {reset}> Reset </button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const Button = (props) => {\n\n// \treturn (\n// \t\t\t<button onClick = {props.handleclick}> {props.text} </button>\n// \t\t)\n// }\n\n// const App = () => {\n\n// \tconst [counter, setCounter] = useState(0);\n\n// \tconst increase = () => {\n// \t\treturn setCounter(counter+1)\n// \t}\n// \tconst decrease = () => {\n// \t\treturn setCounter(counter-1)\n// \t}\n// \tconst reset = () => {\n// \t\treturn setCounter(0)\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<div> {counter} </div>\n// \t\t\t\t<Button handleclick = {increase} \n// \t\t\t\t\ttext = 'Increase'>\n// \t\t\t\t</Button>\t\n\n// \t\t\t\t<Button handleclick = {decrease} \n// \t\t\t\t\ttext = 'Decrease'>\n// \t\t\t\t</Button>\n\n// \t\t\t\t<Button handleclick = {reset}\n// \t\t\t\t\ttext = 'Reset'>\n// \t\t\t\t</Button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const App = () => {\n// \tconst [left, setleft] = useState(0)\n// \tconst [right, setright] = useState(0)\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<div>{left}</div>\n// \t\t\t\t<button onClick = {() => setleft(left+1)}> Left </button>\n// \t\t\t\t<div> {right}</div>\n// \t\t\t\t<button onClick = {() => setright(right+1)}> Right </button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const App = () => {\n\n// \tconst [click, setClick] = useState({\n// \t\tleft: 0,\n// \t\tright: 0 \n// \t})\n\n// \tconst handleleftclick = () => {\n// \t\tconst newclick = {\n// \t\t\tleft: click.left+1,\n// \t\t\tright: click.right\n// \t\t}\n// \t\tsetClick(newclick)\n// \t}\n\n// \tconst handlerightclick = () => {\n// \t\tconst newclick = {\n// \t\t\tleft: click.left,\n// \t\t\tright: click.right+1\n// \t\t}\n// \t\tsetClick(newclick)\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t{click.left}\n// \t\t\t\t<button onClick = {handleleftclick}> Left </button>\n// \t\t\t\t{click.right}\n// \t\t\t\t<button onClick = {handlerightclick}> Right </button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const History = (props) => {\n// \tif(props.allclick.length == 0) {\n// \t\treturn (\n// \t\t\t\t<div>\n// \t\t\t\t\t<p> No Button Pressed </p>\n// \t\t\t\t</div>\n// \t\t\t)\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<p> Pressing History is {props.allclick.join(' ')} </p>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const App = () => {\n// \tconst [left, setleft] = useState(0)\n// \tconst [right, setright] = useState(0)\n// \tconst [allclick, setAll] = useState([])\n\n// \tconst increaseLeft = () => {\n// \t\tsetAll(allclick.concat('L'))\n// \t\tsetleft(left+1)\n// \t}\n\n// \tconst increaseRight = () => {\n// \t\tsetAll(allclick.concat('R'))\n// \t\tsetright(right+1)\n// \t}\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t{left}\n//     \t\t\t<button onClick = {increaseLeft}> Left </button>\n//     \t\t\t{right}\n//     \t\t\t<button onClick = {increaseRight}> Right </button>\n\n//     \t\t\t<History allclick = {allclick}/>\n// \t\t\t</div>\n// \t\t)\n\n// }\n\n// const App = () => {\n\n// \tconst hello = (who) => {\n\n// \t\tconst handler = () => {\n// \t\t\tconsole.log('hello', who)\n\n// \t\t}\n\n// \t\treturn handler\n// \t}\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<button onClick = {hello('react')}> React </button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const App = () => {\n// \tconst [value, setValue] = useState(10)\n\n// \tconst setToValue = (newValue) => {\n// \t\tconst handler = () => {\n// \t\t\tsetValue(newValue)\n// \t\t}\n// \t\treturn handler\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t{value}\n// \t\t\t\t<button onClick = {setToValue(1000)}> Reset </button>\n// \t\t\t\t<button onClick = {setToValue(value+1)}> Increase </button>\n// \t\t\t</div>\n// \t\t)\n// }\n\n\n// Never define components inside components\n\n// const Display = props => <div>{props.value}</div>\n\n// const Button = (props) => (\n//   <button onClick={props.handleClick}>\n//     {props.text}\n//   </button>\n// )\n\n// const App = () => {\n//   const [value, setValue] = useState(10)\n\n//   const setToValue = newValue => {\n//     setValue(newValue)\n//   }\n\n// \treturn (\n// \t<div>\n// \t  <Display value={value} />\n// \t  <Button handleClick={() => setToValue(1000)} text=\"thousand\" />\n// \t  <Button handleClick={() => setToValue(0)} text=\"reset\" />\n// \t  <Button handleClick={() => setToValue(value + 1)} text=\"increment\" />\n// \t</div>\n// \t)\n// }\n\n// const Print = (props) => {\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<p> {props.text} {props.val} </p>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const Statistics = (props) => {\n\n// \tconst sum = props.val1 + props.val2 + props.val3\n\n// \tif(sum == 0) {\n// \t\treturn (\n// \t\t\t\t<div>\n// \t\t\t\t\t<p> No feedback given </p>\n// \t\t\t\t</div>\n// \t\t\t)\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<Print text = {props.text1} val = {props.val1}/>\n// \t\t\t\t<Print text = {props.text2} val = {props.val2}/> \n// \t\t\t\t<Print text = {props.text3} val = {props.val3}/>\n// \t\t\t\t<Print text = 'all' val = {props.val1 + props.val2 + props.val3}/>\n// \t\t\t\t<Print text = 'average' val = {(props.val1 + props.val2 + props.val3)/3}/>\n// \t\t\t\t<Print text = 'positive' val = {props.val1*100/(props.val1 + props.val2 + props.val3)}/>\n// \t\t\t</div>\n// \t\t)\n// }\n\n\n// const App = () => {\n\n// \tconst [good, setgood] = useState(0)\n// \tconst [neutral, setneutral] = useState(0)\n// \tconst [bad, setbad] = useState(0)\n\n// \tconst goodCounter = () => {\n\t\t\n// \t\tconst handler = () => {\n// \t\t\tsetgood(good+1)\n// \t\t}\n// \t\treturn handler\n// \t}\n\n// \tconst neutralCounter = () => {\n\t\t\n// \t\tconst handler = () => {\n// \t\t\tsetneutral(neutral+1)\n// \t\t}\n// \t\treturn handler\n// \t}\n\n// \tconst badCounter = () => {\n\t\t\n// \t\tconst handler = () => {\n// \t\t\tsetbad(bad+1)\n// \t\t}\n// \t\treturn handler\n// \t}\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<h1> Give Feedback </h1>\n\n// \t\t\t\t<button onClick = {goodCounter(0)}> good </button>\n// \t\t\t\t<button onClick = {neutralCounter(0)}> neutral </button>\n// \t\t\t\t<button onClick = {badCounter(0)}> bad </button>\n\n// \t\t\t\t<h2> Statistics </h2> \n\n// \t\t\t\t<Statistics text1 = 'good' text2 = 'bad' text3 = 'neutral' val1 = {good} val2 = {bad} val3 = {neutral}/>\n// \t\t\t</div>\n// \t\t)\n// }\n\n\n\n\n// const App = () => {\n// \tconst [selected, setSelected] = useState(0)\n// \tconst [vote, setVote] = useState(new Array(6).fill(0))\n// \tconst tempCopy = [...vote]\n\t\n// \tconst generateRandomAnecdote = () => {\n// \t\tsetSelected(Math.floor(Math.random() * (anecdotes.length)))\n// \t}\n\n// \tconst getVotes = () => {\n// \t\ttempCopy[selected]+=1\n// \t\tsetVote(tempCopy)\n// \t}\n\n// \tconst getMaxVotes = (v) => {\n\n// \t\tlet maxVotes = 0;\n// \t\tlet maxIndex = 0;\n\n// \t\tfor(let i=0;i<v.length;i++) {\n// \t\t\tif(v[i] > maxVotes) {\n// \t\t\t\tmaxVotes = v[i]\n// \t\t\t\tmaxIndex = i\n// \t\t\t}\n// \t\t}\n\n// \t\treturn [maxVotes, maxIndex]\n// \t}\n\n// \tconst [maxVotes, maxIndex] = getMaxVotes(vote)\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<p> {anecdotes[selected]} </p>\n// \t\t\t\t<p> has {tempCopy[selected]} votes </p>\n// \t\t\t\t<button onClick = {generateRandomAnecdote}> Next </button>\n// \t\t\t\t<button onClick = {getVotes}> Vote </button>\n// \t\t\t\t<h1> Anecdote with most votes </h1>\n// \t\t\t\t<p> {anecdotes[maxIndex]} </p>\n// \t\t\t\t<p> has {maxVotes} votes </p>\n// \t\t\t</div>\n// \t\t)\n// }\n\n\n\n// const anecdotes = [\n//   'If it hurts, do it more often',\n//   'Adding manpower to a late software project makes it later!',\n//   'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n//   'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n//   'Premature optimization is the root of all evil.',\n//   'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n// ]\n\n// const Course = (props) => {\n\n// \t// var sum = 0\n// \t// for(let i=0;i<props.course.parts.length;i++) {\n// \t// \tsum += props.course.parts[i].exercises\n// \t// }\n\t\n// \tvar total = props.course.parts.reduce(function(sum, item) {\n// \t\treturn sum += item.exercises\n// \t}, 0)\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<h1> {props.course.name} </h1>\n// \t\t\t\t<ul>\n// \t\t\t\t\t{props.course.parts.map((item,i) => {\n// \t\t\t\t\t\treturn <li key = {i}> {item.name} {item.exercises} </li>\n// \t\t\t\t\t})}\n// \t\t\t\t</ul>\n// \t\t\t\t<h3> total of {total} exercises </h3>\n// \t\t\t</div>\n// \t\t)\n// }\n\n// const Total = (props) => {\n\n// \tconsole.log(props.curcourse)\n// \tvar total = props.curcourse.reduce(function(sum, item) {\n// \t\treturn sum += item.exercises\n// \t}, 0)\n// \treturn (\n// \t\t\t<h2> total of {total} exercises </h2>\n// \t\t)\n// }\n\n// const Course = (props) => {\n// \tconst course = props.course\n\n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t{course.map((item, i) => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<h1 key = {i}> {item.name} </h1>\n// \t\t\t\t\t\t\t<ul> \n// \t\t\t\t\t\t\t\t{item.parts.map((it, i) => {\n// \t\t\t\t\t\t\t\t\treturn <li key = {i}> {it.name} {it.exercises} </li>\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t\t</ul>\n// \t\t\t\t\t\t\t<Total curcourse = {item.parts}/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t)\n// \t\t\t\t})} \n// \t\t\t</div>\n// \t\t)\n// }\n\n// import App from './components/App';\n\n// const courses = [\n//   {\n//     name: 'Half Stack application development',\n//     id: 1,\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10,\n//         id: 1\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7,\n//         id: 2\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14,\n//         id: 3\n//       },\n//       {\n//         name: 'Redux',\n//         exercises: 11,\n//         id: 4\n//       }\n//     ]\n//   }, \n//   {\n//     name: 'Node.js',\n//     id: 2,\n//     parts: [\n//       {\n//         name: 'Routing',\n//         exercises: 3,\n//         id: 1\n//       },\n//       {\n//         name: 'Middlewares',\n//         exercises: 7,\n//         id: 2\n//       }\n//     ]\n//   }\n// ]\n\n\n// ReactDom.render(<App courses={courses}/>, document.getElementById('root'));\n\nimport App from './components/App';\n\n// const promise = axios.get('http://localhost:3001/notes')\n\n// promise.then(response => {\n// \tconsole.log(response)\n// })\n\n// axios.get('http://localhost:3001/notes').then(response => {\n// \tconst notes = response.data\n// \tReactDom.render(<App notes = {notes}/>, document.getElementById('root'));\n// })\n\nReactDom.render(<App />, document.getElementById('root'))","/home/shreyansh/Downloads/my-app/src/components/Note.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":27,"column":6,"nodeType":"59","endLine":27,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":12,"column":1,"nodeType":"63","endLine":12,"endColumn":24},{"ruleId":"53","severity":1,"message":"64","line":1699,"column":7,"nodeType":"55","messageId":"56","endLine":1699,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countryFound'. Either include it or remove the dependency array.","ArrayExpression",["65"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getAll' is assigned a value but never used.",{"desc":"66","fix":"67"},"Update the dependencies array to be: [countryFound]",{"range":"68","text":"69"},[623,625],"[countryFound]"]